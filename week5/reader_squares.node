# Reads points from given file in format <x>,<y>\n
# Makes them into squares with width w & height h
# Use highlight to show the various points and centroid
# by Erin RobotGrrl, March 3 2015

import fab

title('Reader - Squares')
input('file', str)
input('highlight', int)
input('w', float)
input('h', float)
input('z0', float)
input('z1', float)

f = open(file, 'r')

num = 0
points = []
centroid = [0, 0]

for line in f:
  l = line.rstrip('\n')
  p = l.split(',')
  x = int(p[0])
  y = int(p[1])
  centroid[0] += x
  centroid[1] += y
  points.append([x,y])
  #print('(%d, %d)' % (x, y))

num = len(points)
#print('%d points' % num)

centroid[0] /= num
centroid[1] /= num
#print('centroid: (%d, %d)' % (centroid[0], centroid[1]))

# rectangle center by Neil Gershenfeld 1/24/15
def rectangle_center(x0,y0,width,height):
   from fab.types import Shape, Transform
   # max(max(x0-width/2-X,X-x0-width/2),max(y0-height/2-Y,Y-y0-height/2))
   xmin = x0-width/2.0
   ymin = y0-height/2.0
   xmax = x0+width/2.0
   ymax = y0+height/2.0
   return Shape(
      'aa-f%(xmin)gX-Xf%(xmax)ga-f%(ymin)gY-Yf%(ymax)g' % locals(),
       x0-width/2,y0-height/2,x0+width/2,y0+height/2)

all_shapes = rectangle_center(points[0][0], points[0][1], w, h)

for i in range(1, num):
  s = rectangle_center(points[i][0], points[i][1], w, h)
  all_shapes |= s

if(z0 == 0 and z1 <= 0):
  output('shape', all_shapes)
else:
  output('shape', fab.shapes.extrude_z(all_shapes, z0, z1))

if(highlight != 0):
  fab.ui.point(centroid[0], centroid[1], 0, color=fab.color.orange)
  meep = highlight%num
  fab.ui.point(points[meep][0], points[meep][1], 0, color=(128,0,128))

